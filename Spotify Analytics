# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#I searched for the top 10 most popular tracks asnd their artists
SELECT artist_name, popularity, track_name
FROM BIT_DB.Spotifydata
order by popularity desc
limit 10;

#I searchged avg tempo by artist
SELECT artist_name, avg(tempo)
FROM BIT_DB.Spotifydata
group by artist_name;

#Calculated the average popularity of the artists.
#For every artist with an average popularity of 90 or above I show their name, their average popularity, and labeled them as a “Top Star”.
WITH tempTable AS (SELECT s.artist_name, ROUND(avg(s.popularity),2) AS avg_popularity
FROM Spotifydata s
group by s.artist_name)
SELECT artist_name, avg_popularity, 'yes' AS TOP_STAR
FROM tempTable
WHERE avg_popularity >='90';
